$primary-color: $turquoise;

.button {
    border: 6px solid $primary-color;
    background-color: transparent;
    padding: rem-calc(13 47);
    color: $primary-color;
    text-transform: uppercase;
    font-family: $font-family-alt;
    font-weight: 700;
    position: relative;
    transition: all 0.4s;
    display: inline-block;
    outline: none;
    letter-spacing: 2px;

    &:hover {
        color: #000;
    }
}

.button--goo {
    // By default button goo doesnt do anything
    // we rely on modernizr to be sure there's support
    // for svg filters, see below
    .button__beaker,
    .button__blob {
        display: none;
    }
}

.button--ghost {
    &::before {
        content: '';
        display: block;
        position: absolute;
        top: -5px;
        left: -5px;
        width: 100%;
        width: calc(100% + 10px);
        height: 100%;
        height: calc(100% + 10px);
        border: rem-calc(5) solid #f5f5f5;
        background-color: transparent;
        z-index: -1;
        transform: translate3d(10px, 10px, 0);
        transition: all 0.4s;
    }

    &:hover {
        &::before {
            transform: translate3d(0, 0, 0);
            border-color: transparent;
            width: calc(100% + 10px);
            height: calc(100% + 10px);
        }
    }
}

.button--ghost--dark::before {
    border-color: rgba(0, 0, 0, 0.25);
}

.button--dark {
    color: #000;
    border-color: #000;

    &:hover {
        color: #fff;
    }

    &::before {
        border-color: rgba(#000, 0.15);
    }

    &:focus {
        color: #000;
    }

    &:active,
    &:focus {
        background-color: $black !important;
    }
}

.button--light {
    color: #fff;
    border: 4px solid #fff;
    padding: rem-calc(13 30);

    &:hover {
        color: #000;
        background: #fff;
    }

    &::before {
        border-color: rgba(#000, 0.15);
    }

    &:focus {
        color: #000;
    }
}

.button--light.bluebkg {
    &:hover {
        color: $aqua !important;
    }
}

// modernizr class
.svgfilters {
    .button--goo {
        transition-delay: 100ms;

        &:hover {
            .button__breaker::after {
                transform: translateY(0) translateZ(0);
                transition: transform 0.1s;
                transition-delay: 0.5s;
            }

            .button__blob {
                transform: scale(1.4) translateY(0) translateZ(0);

                &:nth-child(1) {
                    transition-delay: 0ms;
                }

                &:nth-child(2) {
                    transition-delay: 100ms;
                    transform: scale(1.4) translateY(0) translateZ(0) rotate(25deg);
                }

                &:nth-child(3) {
                    transition-delay: 50ms;
                    transform: scale(1.6) translateY(0) translateZ(0);
                }

                &:nth-child(4) {
                    transition-delay: 120ms;
                    transform: scale(1.5) translateY(0) translateZ(0) rotate(-25deg);
                }
            }
        }
    }

    .button--goo--dark {
        .button__blob {
            background-color: #000;
        }
    }

    //markup for filter H/T Lucas Bebber http://codepen.io/lbebber/pen/OPjxZL
    // <svg xmlns="http://www.w3.org/2000/svg" version="1.1">
    //   <defs>
    //     <filter id="goo">
    //       <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
    //       <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="goo" />
    //       <feBlend in="SourceGraphic" in2="goo" />
    //     </filter>
    //   </defs>
    // </svg>
    .button__beaker {
        display: block;
        overflow: hidden;
        filter: url('#goo');
        position: absolute;
        top: -3px;
        left: 0;
        bottom: -3px;
        right: -1px;
        z-index: -1;

        &::after {
            content: '';
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            height: calc(100% + 2px);
            width: 101%;
            background-color: $primary-color;
            transform: translateY(100%) translateZ(0);
            transition: transform 0.5s;
        }
    }

    .button__blob {
        display: block;
        position: absolute;
        width: 30%;
        height: 100%;
        border-radius: 100%;
        background-color: $primary-color;
        transform: scale(1.3) translateY(125%) translateZ(0);
        transition: all 0.5s;

        &:nth-child(1) {
            left: -5%;
            transition-delay: 0ms;
        }

        &:nth-child(2) {
            left: 20%;
            transition-delay: 50ms;
        }

        &:nth-child(3) {
            left: 45%;
            transition-delay: 25ms;
        }

        &:nth-child(4) {
            left: 75%;
            transition-delay: 50ms;
        }
    }
}


// Solid Buttons

.button--solid {
    border: 0;
    background-color: $primary-color;
    color: $white;
    padding: 1rem 2rem;

    &:hover,
    &:active,
    &:focus {
        color: $white;
    }

    .icon {
        display: inline-block;
        vertical-align: middle;
        margin-left: 0.5rem;
        margin-right: -0.5rem;
    }
}

// Wired Buttons that fill on hover

.button--wired {
    position: relative;
    background-color: transparent;
    border: 2px solid $white;
    color: $white;
    padding: 1rem 1.5rem;
    transform: translateZ(0); // Create new stacking context

    .icon--left {
        margin-right: 0.5rem;
    }

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        height: 100%;
        transition: width 300ms, color 300ms, fill 300ms;
        background-color: #fff;
        z-index: -1;
    }

    &:hover {
        color: #222;

        svg path {
            fill: #222;
        }

        &::before {
            width: 100%;
        }
    }

    &:focus {
        outline: none;
    }
}

.button--expand {
    display: block;
}

